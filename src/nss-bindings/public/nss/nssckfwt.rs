/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
pub enum NSSCKFWInstanceStr { }
pub type NSSCKFWInstance = NSSCKFWInstanceStr;
pub enum NSSCKFWSlotStr { }
pub type NSSCKFWSlot = NSSCKFWSlotStr;
pub enum NSSCKFWTokenStr { }
pub type NSSCKFWToken = NSSCKFWTokenStr;
pub enum NSSCKFWMechanismStr { }
pub type NSSCKFWMechanism = NSSCKFWMechanismStr;
pub enum NSSCKFWCryptoOperationStr { }
pub type NSSCKFWCryptoOperation = NSSCKFWCryptoOperationStr;
pub enum NSSCKFWSessionStr { }
pub type NSSCKFWSession = NSSCKFWSessionStr;
pub enum NSSCKFWObjectStr { }
pub type NSSCKFWObject = NSSCKFWObjectStr;
pub enum NSSCKFWFindObjectsStr { }
pub type NSSCKFWFindObjects = NSSCKFWFindObjectsStr;
pub enum NSSCKFWMutexStr { }
pub type NSSCKFWMutex = NSSCKFWMutexStr;
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum CryptokiLockingState { SingleThreaded = 0, MultiThreaded = 1, }
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum NSSCKFWCryptoOperationState {
    NSSCKFWCryptoOperationState_EncryptDecrypt = 0,
    NSSCKFWCryptoOperationState_SignVerify = 1,
    NSSCKFWCryptoOperationState_Digest = 2,
    NSSCKFWCryptoOperationState_Max = 3,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum NSSCKFWCryptoOperationType {
    NSSCKFWCryptoOperationType_Encrypt = 0,
    NSSCKFWCryptoOperationType_Decrypt = 1,
    NSSCKFWCryptoOperationType_Digest = 2,
    NSSCKFWCryptoOperationType_Sign = 3,
    NSSCKFWCryptoOperationType_Verify = 4,
    NSSCKFWCryptoOperationType_SignRecover = 5,
    NSSCKFWCryptoOperationType_VerifyRecover = 6,
}
