/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct ZipLocal {
    pub signature: [::std::os::raw::c_char; 4usize],
    pub word: [::std::os::raw::c_char; 2usize],
    pub bitflag: [::std::os::raw::c_char; 2usize],
    pub method: [::std::os::raw::c_char; 2usize],
    pub time: [::std::os::raw::c_char; 2usize],
    pub date: [::std::os::raw::c_char; 2usize],
    pub crc32: [::std::os::raw::c_char; 4usize],
    pub size: [::std::os::raw::c_char; 4usize],
    pub orglen: [::std::os::raw::c_char; 4usize],
    pub filename_len: [::std::os::raw::c_char; 2usize],
    pub extrafield_len: [::std::os::raw::c_char; 2usize],
}
impl ::std::default::Default for ZipLocal {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct ZipCentral {
    pub signature: [::std::os::raw::c_char; 4usize],
    pub version_made_by: [::std::os::raw::c_char; 2usize],
    pub version: [::std::os::raw::c_char; 2usize],
    pub bitflag: [::std::os::raw::c_char; 2usize],
    pub method: [::std::os::raw::c_char; 2usize],
    pub time: [::std::os::raw::c_char; 2usize],
    pub date: [::std::os::raw::c_char; 2usize],
    pub crc32: [::std::os::raw::c_char; 4usize],
    pub size: [::std::os::raw::c_char; 4usize],
    pub orglen: [::std::os::raw::c_char; 4usize],
    pub filename_len: [::std::os::raw::c_char; 2usize],
    pub extrafield_len: [::std::os::raw::c_char; 2usize],
    pub commentfield_len: [::std::os::raw::c_char; 2usize],
    pub diskstart_number: [::std::os::raw::c_char; 2usize],
    pub internal_attributes: [::std::os::raw::c_char; 2usize],
    pub external_attributes: [::std::os::raw::c_char; 4usize],
    pub localhdr_offset: [::std::os::raw::c_char; 4usize],
}
impl ::std::default::Default for ZipCentral {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy, Clone)]
#[derive(Debug)]
pub struct ZipEnd {
    pub signature: [::std::os::raw::c_char; 4usize],
    pub disk_nr: [::std::os::raw::c_char; 2usize],
    pub start_central_dir: [::std::os::raw::c_char; 2usize],
    pub total_entries_disk: [::std::os::raw::c_char; 2usize],
    pub total_entries_archive: [::std::os::raw::c_char; 2usize],
    pub central_dir_size: [::std::os::raw::c_char; 4usize],
    pub offset_central_dir: [::std::os::raw::c_char; 4usize],
    pub commentfield_len: [::std::os::raw::c_char; 2usize],
}
impl ::std::default::Default for ZipEnd {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct TarEntry {
    pub _bindgen_data_: [u8; 512usize],
}
impl TarEntry {
    pub unsafe fn val(&mut self) -> *mut header {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
    pub unsafe fn buffer(&mut self)
     -> *mut [::std::os::raw::c_char; 512usize] {
        let raw: *mut u8 = ::std::mem::transmute(&self._bindgen_data_);
        ::std::mem::transmute(raw.offset(0))
    }
}
impl ::std::clone::Clone for TarEntry {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for TarEntry {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
#[repr(C)]
#[derive(Copy)]
pub struct header {
    pub filename: [::std::os::raw::c_char; 100usize],
    pub mode: [::std::os::raw::c_char; 8usize],
    pub uid: [::std::os::raw::c_char; 8usize],
    pub gid: [::std::os::raw::c_char; 8usize],
    pub size: [::std::os::raw::c_char; 12usize],
    pub time: [::std::os::raw::c_char; 12usize],
    pub checksum: [::std::os::raw::c_char; 8usize],
    pub linkflag: ::std::os::raw::c_char,
    pub linkname: [::std::os::raw::c_char; 100usize],
}
impl ::std::clone::Clone for header {
    fn clone(&self) -> Self { *self }
}
impl ::std::default::Default for header {
    fn default() -> Self { unsafe { ::std::mem::zeroed() } }
}
